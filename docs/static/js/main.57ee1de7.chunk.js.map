{"version":3,"sources":["logo.svg","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","logs","value","localKibanaLogs","localStorage","getItem","handleChange","bind","submit","event","this","setState","target","jsonScript","JSON","parse","setItem","logValue","logsArray","responses","hits","forEach","logsEntry","_source","log","match","exec","sortingKey","sort","a","b","console","button","Object","keys","length","map","entry","index","Accordion","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","className","InputGroup","Prepend","Text","FormControl","aria-label","onChange","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,oFC8EEA,E,kDA3Eb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,MAAO,IAET,IAAIC,EAAkBC,aAAaC,QAAQ,cAN1B,OAObF,IAEF,EAAKH,MAAME,MAAQC,GAErB,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBAZG,E,yDAeNE,GACTC,KAAKC,SAAS,CAACT,MAAOO,EAAMG,OAAOV,U,6BAGhCO,GACH,IAAII,EAAaC,KAAKC,MAAML,KAAKV,MAAME,OACvCE,aAAaY,QAAQ,aAAcN,KAAKV,MAAME,OAC9C,IAEIe,EAFAC,EAAYL,EAAWM,UAAU,GAAGC,KAAKA,KAC7CV,KAAKC,SAAS,CAACV,KAAMiB,IAErBA,EAAUG,SAAQ,SAACC,GACfL,EAAWK,EAAUC,QAAQC,IAC7B,IACIC,EADW,gDACMC,KAAKT,GAC1BK,EAAUK,WAAaF,EAAM,MAEjCP,EAAUU,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEF,WAAaG,EAAEH,WACV,EAEPE,EAAEF,WAAaG,EAAEH,YACT,EAEL,KAEXI,QAAQP,IAAIX,K,+BAIZ,IAAImB,EAiBN,OAhBMC,OAAOC,KAAKxB,KAAKV,MAAMC,MAAMkC,SAC7BH,EAAStB,KAAKV,MAAMC,KAAKmC,KAAI,SAACC,EAAOC,GAAR,OACzB,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,WACE,cAACF,EAAA,EAAUG,OAAX,CAAkBC,GAAIC,IAAQC,QAAQ,OAAOC,SAAU,GAAIR,EAA3D,uBAEoBD,EAAMd,QAAQC,OAEpC,cAACe,EAAA,EAAUQ,SAAX,CAAoBD,SAAU,GAAGR,EAAjC,SACE,cAACE,EAAA,EAAKQ,KAAN,UAAYX,EAAMd,QAAQC,YARdc,OAexB,sBAAKW,UAAU,WAAf,UACI,eAACC,EAAA,EAAD,CAAYD,UAAU,OAAtB,UACI,cAACC,EAAA,EAAWC,QAAZ,UACA,cAACD,EAAA,EAAWE,KAAZ,mCAEA,cAACC,EAAA,EAAD,CAAaV,GAAG,WAAWW,aAAW,gBAAgBpD,MAAOQ,KAAKV,MAAME,MAAOqD,SAAU7C,KAAKJ,kBAElG,cAACsC,EAAA,EAAD,CAAQC,QAAQ,UAAUW,QAAS9C,KAAKF,OAAxC,oBACCwB,S,GAvEMyB,a,MCYJC,MAVf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.57ee1de7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport { Button, InputGroup, FormControl, Accordion, Card } from 'react-bootstrap';\nclass Home extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        logs: {},\n        value: ''\n      };\n      let localKibanaLogs = localStorage.getItem('kibanaLogs')\n      if (localKibanaLogs) {\n        // localKibanaLogs = JSON.parse(localKibanaLogs)_\n        this.state.value = localKibanaLogs;\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.submit = this.submit.bind(this);\n    }\n    \n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    submit(event) {\n        let jsonScript = JSON.parse(this.state.value)\n        localStorage.setItem('kibanaLogs', this.state.value);\n        let logsArray = jsonScript.responses[0].hits.hits\n        this.setState({logs: logsArray})\n        let logValue;\n        logsArray.forEach((logsEntry) => {\n            logValue = logsEntry._source.log;\n            let myRegexp = /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3,6})/;\n            let match = myRegexp.exec(logValue);\n            logsEntry.sortingKey = match[1]\n        });\n        logsArray.sort((a, b) => {\n            if (a.sortingKey < b.sortingKey){\n                return 1;\n            }\n            if (a.sortingKey > b.sortingKey) {\n                return -1;\n            }\n            return 0;\n        })\n        console.log(jsonScript);\n    }\n    \n    render() {  \n        let button;\n        if (Object.keys(this.state.logs).length) {\n            button = this.state.logs.map((entry, index) =>\n                <Accordion key={index}>\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={''+ index}>\n                      Click me!\n                    </Accordion.Toggle>{entry._source.log}\n                  </Card.Header>\n                  <Accordion.Collapse eventKey={''+index}>\n                    <Card.Body>{entry._source.log}</Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            )\n        } \n      return (\n        <div className=\"width-80\">\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                <InputGroup.Text>KIBANA Logs Object</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl as=\"textarea\" aria-label=\"With textarea\" value={this.state.value} onChange={this.handleChange}/>\n            </InputGroup>\n            <Button variant=\"primary\" onClick={this.submit}>Submit</Button>\n            {button} \n        </div>\n      );\n    }\n  }\n  export default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}